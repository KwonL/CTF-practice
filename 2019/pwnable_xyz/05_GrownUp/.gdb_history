i r
regs 
disasm 
disasm main
disasm *main
disasm main
disassemble main
disasm 0x400865
disasm 
ls
disasm main
nearpc 
resg
resg
regs
map
mem
mp
hea
heap
mem
regs
mem $rsp
mem $rdi
memfrob 
mem
mem?
mem hep
mem help
help mem
ls
help
data
help data
help
whatis
hexdump 
hexdump rdi
hexdump $rdi
argv
search 
search -h
search "cat"
ls
regs
hexdump rsi
hexdump rsi 40
hexdump rsi 100
hexdump 200 rsi
hexdump -h
hexdump rsi 200
ls
ls
hexdump rdi 
hexdump rdi 200
regs
regs
ls
sl
ls
i b
reg
r
c
r
c
c
r
r
c
regs 
hexdump usr 
hexdump *usr 
hexdump usr
hexdump $rsi
hexdump $rsi-0x40 
hexdump $rsi-0x40 200
hexdump obj.str
hexdump flag 
hexdump *flag 
hexdump @ flag
info flag
info 
i symbol flag
l
ls
x
hexdump 
hexdump sym.flag 
hexdump sym_val 
hexdump sym_val.flag
ls
hexdump -h
flash-erase 
i address flag
hexdump 0x601080
set variable sym_flag = 0x601080
hexdump 0x601080
hexdump 0x601080 200
hexdump 0x601080 400
ls
ls
nearpc 
r2
ls
hexdump 
hexdump 0x608010
hexdump 0x601080
hexdump 0x601080 1000
search "FLAG"
search "FLAG{"
hexdump rsp
stack
nearpc 
r
c
hexdump 0x602010
hexdump 0x602010
r
c
r2
ls
ls
r
c
v
r2
ls
ls
r
c
r
c
r
c
r
c
ls
disassemble 
disassemble main 
i b
b *main + 105
r
c
set {long long}$rsi = 0x5900000000000000
set {long long}($rsi + 8) = 0x601080
c
c
r
c
set {int}($rsi+8) = 0x601080
c
AAAAAAA
c
hexdump 
hexdump 0x601080
ls
q
sl
ls
ls
c <
r
c < ./exploit.py
r
ls
disassemble main
q
disassemble main
b *main
b *main + 105
b *main + 170
r
c
c
c < ./exploit.py
nearpc 
c
c
nez
nearpc 
break
ls
nearpc 
b $rpi
i r
b $rip
b rip
stack
c
stack
nearpc 
c
nearpc 
stack
ls
q
stack
stack
stack
stack 40
stack 20
stack 30
ls
nearpc 
nearpc 
c
disassemble main
b *main + 105
c
sack
stack
ls
b *main + 015
d 1
b *main+105
disassemble main
disasm main
i main
i functions main
disasm 0x400865
disasm 400865
disassemble main
emulate main
emulate main 4
emulate main 40
emulate main 30
b *main + 233
i proc 
c
disassemble 
regs
nearpc 
stack
c
stack
c
c
c
q
emulate main
emulate main 40
b *main+233
ls
disassa
i b
b *main+105
save breakpoints tmp
ls
rm core
ls
c
c
c
resg
regs
